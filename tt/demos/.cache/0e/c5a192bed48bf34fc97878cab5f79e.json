{"id":"node_modules/@tensorflow-models/posenet/dist/base_model.js","dependencies":[{"name":"/Users/ishaansehgal/Downloads/tt/demos/package.json","includedInParent":true,"mtime":1572148033665},{"name":"/Users/ishaansehgal/Downloads/tt/demos/.babelrc","includedInParent":true,"mtime":1572161602000},{"name":"/Users/ishaansehgal/Downloads/tt/demos/node_modules/@tensorflow-models/posenet/package.json","includedInParent":true,"mtime":1572148276915},{"name":"@tensorflow/tfjs-core","loc":{"line":3,"column":17},"parent":"/Users/ishaansehgal/Downloads/tt/demos/node_modules/@tensorflow-models/posenet/dist/base_model.js","resolved":"/Users/ishaansehgal/Downloads/tt/demos/node_modules/@tensorflow/tfjs-core/dist/tf-core.esm.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tf = require(\"@tensorflow/tfjs-core\");\nvar BaseModel = (function () {\n    function BaseModel(model, outputStride) {\n        this.model = model;\n        this.outputStride = outputStride;\n        var inputShape = this.model.inputs[0].shape;\n        tf.util.assert((inputShape[1] === -1) && (inputShape[2] === -1), function () { return \"Input shape [\" + inputShape[1] + \", \" + inputShape[2] + \"] \" +\n            \"must both be equal to or -1\"; });\n    }\n    BaseModel.prototype.predict = function (input) {\n        var _this = this;\n        return tf.tidy(function () {\n            var asFloat = _this.preprocessInput(input.toFloat());\n            var asBatch = asFloat.expandDims(0);\n            var results = _this.model.predict(asBatch);\n            var results3d = results.map(function (y) { return y.squeeze([0]); });\n            var namedResults = _this.nameOutputResults(results3d);\n            return {\n                heatmapScores: namedResults.heatmap.sigmoid(),\n                offsets: namedResults.offsets,\n                displacementFwd: namedResults.displacementFwd,\n                displacementBwd: namedResults.displacementBwd\n            };\n        });\n    };\n    BaseModel.prototype.dispose = function () {\n        this.model.dispose();\n    };\n    return BaseModel;\n}());\nexports.BaseModel = BaseModel;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/@tensorflow-models/posenet/dist/base_model.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tf = require(\"@tensorflow/tfjs-core\");\nvar BaseModel = (function () {\n    function BaseModel(model, outputStride) {\n        this.model = model;\n        this.outputStride = outputStride;\n        var inputShape = this.model.inputs[0].shape;\n        tf.util.assert((inputShape[1] === -1) && (inputShape[2] === -1), function () { return \"Input shape [\" + inputShape[1] + \", \" + inputShape[2] + \"] \" +\n            \"must both be equal to or -1\"; });\n    }\n    BaseModel.prototype.predict = function (input) {\n        var _this = this;\n        return tf.tidy(function () {\n            var asFloat = _this.preprocessInput(input.toFloat());\n            var asBatch = asFloat.expandDims(0);\n            var results = _this.model.predict(asBatch);\n            var results3d = results.map(function (y) { return y.squeeze([0]); });\n            var namedResults = _this.nameOutputResults(results3d);\n            return {\n                heatmapScores: namedResults.heatmap.sigmoid(),\n                offsets: namedResults.offsets,\n                displacementFwd: namedResults.displacementFwd,\n                displacementBwd: namedResults.displacementBwd\n            };\n        });\n    };\n    BaseModel.prototype.dispose = function () {\n        this.model.dispose();\n    };\n    return BaseModel;\n}());\nexports.BaseModel = BaseModel;\n"},"lineCount":34}},"error":null,"hash":"0f680480ecce3235ed592ecc74714064","cacheData":{"env":{}}}